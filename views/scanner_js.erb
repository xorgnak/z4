var video = document.createElement("video");
var canvasElement = document.getElementById("canvas");
var canvas = canvasElement.getContext("2d");
var found = false;

function handler(scn) {
    var h = {};
    var o = scn.split("?");
    var ho = o[0].split("://");
    var hos = ho[1].split("/");
    var qri = hos[1];
    var kv = o[1].split("&");
    kv.forEach(function(v, i, obj) { var oo = v.split("="); h[oo[0]] = oo[1]; });
    console.log("<<<", h);
    $.post("/" + qri, h, function(d) { console.log(">>>", d) });
}

function tick() {
    if (video.readyState === video.HAVE_ENOUGH_DATA) {
	canvasElement.height = video.videoHeight;
	canvasElement.width = video.videoWidth;
	canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
	var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
	var code = jsQR(imageData.data, imageData.width, imageData.height, { inversionAttempts: "dontInvert" });
	var dom = /<%= @app.id %>/g;
	
	if (code) {
	    if (dom.test(code.data)) { handler(code.data); }
	}
    }
    requestAnimationFrame(tick);
} 

if (navigator.mediaDevices?.enumerateDevices) {
    navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
	log({ color: "green", icon: "notifications", message: "scanner started." });
	video.srcObject = stream;
	video.setAttribute("playsinline", true);
	video.play();
	requestAnimationFrame(tick);
    });
}
